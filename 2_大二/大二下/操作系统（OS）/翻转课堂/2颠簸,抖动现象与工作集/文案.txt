
1、什么是颠簸/抖动现象?

虚存中，页面在内存与外存之间频繁调度，进程的运行将很频繁地产生缺页中断，以至于调度页面所需时间比进程实际运行的时间还多，此时系统效率急剧下降，甚至导致系统崩溃。这种频率非常高的页面置换现象称为抖动。


2、颠簸/抖动现象出现的原因?

主要原因：页面淘汰算法不合理、分配给进程的物理页面太少；


3、什么是工作集?

工作集是指一个进程执行过程中所访问的页面的合集。
（工作集模型是1968年由Denning 提出的。引入工作集的目的是依据进程在过去的一段时间内访问的页面来调整常驻集大小。根据程序的局部性原理，一般情况下，进程在一段时间内总是集中访问一些页面，这些页面称为活跃页面。如果分配给一个进程的物理页面数太少了，使该进程所需的活跃页面不能全部装入内存，则进程在运行过程中将频繁发生中断。如果能为进程提供与活跃页面数相等的物理页面数，则可减少缺页中断次数。对于给定的访问序列选取定长的区间，称为工作集窗口，落在工作集窗口中的页面集合称为工作集。
——摘自课本 p174 ）


4、工作集是如何解决颠簸/抖动问题的？

以下页面淘汰算法基于工作集模型来解决颠簸、抖动问题。

（1）工作集算法：
O记录一个进程工作集的变化；
O定期从常驻集中删除不在工作集中的页面；
O总是让常驻集包含工作集。

（2）缺页率算法（PPF）：
（是对工作集算法的优化，主要是简化了操作系统的维护开销。）
O页面被访问时的处理：每个页面设立使用位(usebit)，在该页被访问时设置usebit=1；
O缺页时的处理：每次缺页时，由操作系统计算与上次缺页的“虚拟时间”间隔t；
O缺页时对常驻集的调整：定义一个“虚拟时间”间隔的阈值(threshold)F，依据t和F来修改常驻集。如果t小于F，则所缺页添加到常驻集中；否则，将所有use bit=0的页面从物理内存清除并缩小常驻集；随后，对常驻集中的所有页面设置use bit=0。

（3）可变采样间隔算法(VSWS)
O使用3个参数：采样间隔时间的下限M，采样间隔时间的上限L，一个采样间隔内允许发生的缺页次数的上限Q。
采样间隔通常情况下由缺页次数Q来控制，而M和L提供异常情况下的界限条件O常驻集的调整：每个页面设立使用位(user bit)，在每个采样间隔的开始设置各页的user bit=0，而在每个采样间隔的结束只保留userbit=1的页面在常驻集中，其余页面从常驻集中删除。在采样间隔内发生缺页的页面，被添加到常驻集中。
O采样间隔划分：每次缺页时，对缺页次数加1。如果上次采样以来经过时间已达到L而缺页次数未达到Q，则结束当前采样间隔，并开始下一个采样间隔；如果缺页次数达到Q而经过时间己达到M，则结束当前采样间隔，并开始下一个采样间隔；如果缺页次数达到Q而经过时间未达到M，则不作处理。




//----------------------------------------------以下仅为补充内容

《扩展》 工作集以外的其他策略：

1.选择其他合适的页面淘汰算法，如LRU算法等等；
2.增加主存容量，减少页面置换次数；
3.设置合理的进程数目和页面大小，尽量减少运行的进程数；
4.使用局部置换策略，当进程发生缺页，只能在分片给自己的内存空间进行置换。


《扩展》 不同情况下，分别是哪种解决算法效果最好？

*局部性比较强：LRU算法
*需要适应进程的内存需求和系统的负载变化：工作集算法
*需要平衡系统的吞吐量和响应时间：缺页率算法
*需要动态调整采样间隔：可变采样间隔算法



